pipeline {
    agent {
        docker {
            image 'python:3.9-slim'
        }
    }

    stages {
<<<<<<< HEAD
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set up Python') {
            steps {
                script {
                    sh 'apt-get update && apt-get install -y python3'
                }
            }
        }

=======
>>>>>>> 95f7d06818e205d6a2b65ecacd6a585b65e09156
        stage('Build') {
            steps {
                script {
                    sh 'echo "Building..."'
                    sh 'cd Jenkins_Python_S107/flask/requirements/ && ls *.txt'
                    sh 'docker pull python:3.9-slim || true'
                    sh 'docker build --cache-from python:3.9-slim -t meuapp:latest .'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'echo "Testing..."'
                    sh 'cd Jenkins_Python_S107/flask'
                    sh 'pytest'
                    archiveArtifacts 'Jenkins_Python_S107/flask/flash/tests'
                }
            }
        }

        stage('Notifications') {
            steps {
                script {
                    sh 'echo "Notificação"'
                    sh 'cd scripts chmod 775 * ./jenkins.sh'
                }
            }
        }
    }

    post {
        failure {
            emailext subject: 'Build Failed',
                      body: 'O build falhou. Veja a console de build para mais detalhes.',
                      to: 'luca.felipe@ges.inatel.br'
        }
    }
}
