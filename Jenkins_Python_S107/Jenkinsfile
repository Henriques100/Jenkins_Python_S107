pipeline {
    agent {
        docker {
            image 'python:3.9-slim'
        }
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Construir a imagem Docker usando o Dockerfile do Flask
                    def dockerImage = docker.build('flask-app:latest', '.')

                    // Executar o contêiner Docker com a aplicação Flask
                    dockerImage.run('--name flask-app')

                    // Executar os testes
                    dockerImage.inside() {
                        sh 'python -m pytest'
                    }

                    // Limpar o contêiner após os testes
                    sh 'docker rm -f flask-app'
                }
            }
        }

        stage('Notifications') {
            steps {
                script {
                    sh 'echo "Notificação"'
                    sh 'echo "Enviando e-mail para luca.felipe@ges.inatel.br..."'
                    sh 'echo "Enviando mensagem para o canal Slack..."'
                }
            }
        }
    }

    post {
        failure {
            emailext subject: 'Build Failed',
                      body: 'O build falhou. Veja a console de build para mais detalhes.',
                      to: 'luca.felipe@ges.inatel.br'
        }
    }
}
